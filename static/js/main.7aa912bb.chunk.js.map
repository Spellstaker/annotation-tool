{"version":3,"sources":["Tool.js","App.js","serviceWorker.js","index.js"],"names":["Title","Typography","TextArea","Input","faded","color","Tool","props","state","source","duration","rate","currentLine","lyrics","songName","lineActive","completed","mark","bind","prev","validIndex","annotateElement","reset","silent","onChange","textChange","changeRate","event","file","target","files","link","URL","createObjectURL","this","setState","name","console","log","time","Math","floor","audio","currentTime","lineIndex","endTime","max","startTime","length","i","pause","value","split","map","line","playbackRate","ind","fadeText","valid","style","onClick","type","disabled","title","width","margin","hide","placeholder","autoSize","ref","a","src","controls","span","min","step","marks","1","placement","onConfirm","okText","cancelText","margin_top","data","filename","shape","icon","size","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7aa912bb.chunk.js","sourcesContent":["import 'antd/dist/antd.css'\r\n// import './Tool.css'\r\nimport React, { Component } from 'react'\r\nimport { Popconfirm, Typography, Card, Slider, InputNumber, Row, Col, Input, Button, Icon } from 'antd'\r\nimport { CSVLink } from \"react-csv\"\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\nconst faded = { color: \"rgba(0, 0, 0, 0.5)\" }\r\n\r\nexport class Tool extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            source: \"http://streaming.tdiradio.com:8000/house.mp3\",\r\n            duration: 0,\r\n            rate: 1,\r\n            currentLine: 0,\r\n            lyrics: [],\r\n            songName: \"\",\r\n            lineActive: false,\r\n            completed: false,\r\n        }\r\n\r\n        this.mark = this.mark.bind(this)\r\n        this.prev = this.prev.bind(this)\r\n        this.validIndex = this.validIndex.bind(this)\r\n        this.annotateElement = this.annotateElement.bind(this)\r\n        this.reset = this.reset.bind(this)\r\n        this.silent = this.silent.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.textChange = this.textChange.bind(this)\r\n        this.changeRate = this.changeRate.bind(this)\r\n    }\r\n\r\n    onChange(event) {\r\n        const file = event.target.files[0]\r\n        const link = URL.createObjectURL(file)\r\n        this.setState({ source: link, songName: file.name })\r\n    }\r\n\r\n    mark() {\r\n        console.log(this.state.lyrics)\r\n\r\n        const time = Math.floor(this.audio.currentTime * 1000)\r\n        let lineIndex = this.state.currentLine\r\n        let lineActive = false\r\n        let completed = false\r\n\r\n        let lyrics = this.state.lyrics\r\n        if (this.state.lineActive && this.state.currentLine > 0) {\r\n            lyrics[this.state.currentLine - 1].endTime = Math.max(lyrics[this.state.currentLine - 1].startTime, time - 1)\r\n            completed = this.state.currentLine == this.state.lyrics.length\r\n        }\r\n        if (this.state.currentLine < this.state.lyrics.length) {\r\n            lyrics[this.state.currentLine].startTime = time\r\n            lyrics[this.state.currentLine].endTime = time\r\n            lineIndex++\r\n            lineActive = true\r\n        }\r\n        this.setState({ lyrics: lyrics, currentLine: lineIndex, lineActive: lineActive, completed: completed })\r\n    }\r\n\r\n    silent() {\r\n        console.log(...this.state.lyrics)\r\n\r\n        const time = Math.floor(this.audio.currentTime * 1000)\r\n        let completed = false\r\n        let lyrics = this.state.lyrics\r\n        if (this.state.lineActive && this.state.currentLine > 0) {\r\n            lyrics[this.state.currentLine - 1].endTime = Math.max(lyrics[this.state.currentLine - 1].startTime, time)\r\n            completed = this.state.currentLine == this.state.lyrics.length\r\n        }\r\n        this.setState({ lyrics: lyrics, lineActive: false, completed: completed })\r\n    }\r\n\r\n    reset() {\r\n        let lyrics = this.state.lyrics\r\n        for (let i = 0; i < lyrics.length; i++) {\r\n            lyrics[i].startTime = 0\r\n            lyrics[i].endTime = 0\r\n        }\r\n        this.audio.pause()\r\n        this.audio.currentTime = 0\r\n        this.setState({ lyrics: lyrics, currentLine: 0, completed: false, lineActive: false })\r\n    }\r\n\r\n    textChange(event) {\r\n        const text = event.target.value\r\n        const lines = text.split('\\n')\r\n        const lyrics = lines.map(line => ({ line: line, startTime: 0, endTime: 0 }))\r\n        this.setState({ lyrics: lyrics })\r\n    }\r\n\r\n    changeRate(rate) {\r\n        this.setState({ rate: rate })\r\n        this.audio.playbackRate = rate\r\n    }\r\n\r\n    prev() {\r\n        let lyrics = this.state.lyrics\r\n        let currentLine = this.state.currentLine\r\n        if (this.state.currentLine < lyrics.length) {\r\n            lyrics[currentLine].startTime = 0\r\n            lyrics[currentLine].endTime = 0\r\n        }\r\n        currentLine--\r\n        lyrics[currentLine].startTime = 0\r\n        lyrics[currentLine].endTime = 0\r\n        this.audio.currentTime -= 3\r\n        this.setState({ lyrics: lyrics, currentLine: currentLine, lineActive: false, completed: false })\r\n    }\r\n\r\n    validIndex(ind) {\r\n        const fadeText = ind != this.state.currentLine\r\n        let valid = this.state.lyrics.length > 0\r\n        valid &= ind >= 0\r\n        valid &= ind < this.state.lyrics.length\r\n        if (valid) {\r\n            return (\r\n                <Title\r\n                    style={fadeText ? faded : {}}\r\n                    onClick={fadeText ? () => { } : this.mark}\r\n                >\r\n                    {this.state.lyrics[ind].line}\r\n                </Title>\r\n            )\r\n        }\r\n        return null\r\n    }\r\n\r\n    annotateElement() {\r\n        if (this.state.lyrics.length == 0) {\r\n            return <Title>Please add lyrics</Title>\r\n        }\r\n        if (this.state.completed)\r\n            return <Title>Lyrics Completed!</Title>\r\n        return (\r\n            <div>\r\n                {this.validIndex(this.state.currentLine - 1, true)}\r\n                {\r\n                    this.state.currentLine < this.state.lyrics.length && this.state.currentLine > 0 &&\r\n                    <Button type=\"dashed\" onClick={this.silent} disabled={this.state.lyrics.length === 0}>Silence</Button>\r\n                }\r\n                {this.validIndex(this.state.currentLine)}\r\n                <Button type=\"dashed\" onClick={this.silent} disabled={this.state.lyrics.length === 0}>Silence</Button>\r\n                {this.validIndex(this.state.currentLine + 1, true)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card title=\"Input\" style={{ width: \"80%\", margin: \"2em auto\" }} hide={true}>\r\n                    <center>\r\n                        <div>\r\n                            <TextArea onChange={this.textChange} placeholder=\"Enter Lyrics\" autoSize />\r\n                        </div>\r\n                        <input type='file' name='file' onChange={this.onChange} />\r\n                    </center>\r\n                </Card>\r\n                <Card title=\"Audio\" style={{ width: \"80%\", margin: \"2em auto\" }}>\r\n                    <center >\r\n                        <audio ref={(a) => this.audio = a} src={this.state.source} style={{ width: \"80%\", margin: 'auto' }} controls>\r\n                            Test\r\n                        </audio>\r\n                    </center    >\r\n\r\n                    <Card title=\"Rate\" type=\"inner\" style={{ width: \"80%\", margin: \"auto\" }}>\r\n\r\n                        <Row>\r\n                            <Col span={16}>\r\n                                <Slider\r\n                                    min={0.5}\r\n                                    max={2}\r\n                                    step={0.01}\r\n                                    marks={{ 1: '1.0' }}\r\n                                    value={this.state.rate}\r\n                                    onChange={this.changeRate}\r\n                                />\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <InputNumber\r\n                                    min={0.5}\r\n                                    max={2}\r\n                                    step={0.1}\r\n                                    style={{ margin: 16 }}\r\n                                    value={this.state.rate}\r\n                                    onChange={this.changeRate}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </Card>\r\n\r\n\r\n                <Card title=\"Lyrics\" style={{ width: \"80%\", margin: \"1em auto\" }}>\r\n\r\n                    <center>\r\n                        {this.annotateElement()}\r\n                    </center>\r\n\r\n                    <center>\r\n                        <Button style={{ margin: \"1em\" }} type=\"primary\" onClick={this.mark} disabled={this.state.lyrics.length === 0}>Mark</Button>\r\n                        <Popconfirm\r\n                            placement=\"bottom\"\r\n                            title=\"Are you sure you want to reset? You will lose all annotation\"\r\n                            onConfirm={this.reset} okText=\"Yes\" cancelText=\"No\">\r\n                            <Button style={{ margin: \"1em\" }} type=\"danger\" disabled={this.state.lyrics.length === 0}>Reset</Button>\r\n                        </Popconfirm>\r\n                        <Button\r\n                            style={{ margin: \"1em\" }}\r\n                            type=\"primary\"\r\n                            onClick={this.prev}\r\n                            disabled={this.state.lyrics.length === 0 || this.state.currentLine === 0}\r\n                        >\r\n                            <Icon type=\"left\" /> Previous Line\r\n                        </Button>\r\n                    </center>\r\n                    {/* <Button type=\"primary\" onClick={this.prev} disabled={this.state.lyrics.length === 0}>\r\n                        <Icon type=\"right\" />\r\n                    </Button> */}\r\n                </Card>\r\n\r\n                <center style={{ margin_top: 30 }}>\r\n                    <CSVLink\r\n                        data={this.state.lyrics}\r\n                        filename={`${this.state.songName}.csv`}\r\n                        style={{ color: \"white\", margin: 'auto' }}>\r\n                        <Button type=\"primary\" shape=\"round\" icon=\"download\" size=\"large\" >\r\n                            Save File\r\n                        </Button>\r\n                    </CSVLink>\r\n                </center>\r\n            </div >\r\n        );\r\n    }\r\n}","import React from 'react';\nimport { Tool } from './Tool'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Tool />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}